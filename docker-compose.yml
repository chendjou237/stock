version: '3'
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: stock_app
    restart: unless-stopped
    working_dir: /var/www
    environment:
      DB_HOST: db
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: root
      DB_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - ./:/var/www
      # Exclude node_modules and dist from volume mount
      - /var/www/node_modules
      - /var/www/public/js
      - /var/www/public/css
    networks:
      - stock_network
    depends_on:
      - db

  nginx:
    image: nginx:alpine
    container_name: stock_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d:/etc/nginx/conf.d
      # Exclude node_modules and dist from volume mount
      - /var/www/node_modules
      - /var/www/public/js
      - /var/www/public/css
    networks:
      - stock_network
    depends_on:
      - app

  db:
    image: mysql:8.0
    container_name: stock_db
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - stock_network

networks:
  stock_network:
    driver: bridge

volumes:
  dbdata:
    driver: local
